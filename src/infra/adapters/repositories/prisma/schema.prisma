generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String     @id
  createdAt  DateTime   @map("created_at")
  updatedAt  DateTime   @map("updated_at")
  email      String     @map("email")
  isActive   Boolean    @map("is_active")
  firstName  String     @map("first_name")
  lastName   String     @map("last_name")
  password   String     @map("password")
  categories Category[]
  banks      Bank[]
  releases   Release[]
  codes      Codes[]

  @@map("custom_user")
}

model Codes {
  id        String   @id
  createdAt DateTime @map("created_at")
  updatedAt DateTime @map("updated_at")
  code      String   @map("code")
  isValid   Boolean  @map("is_valid")
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @map("user_id")

  @@map("user_code")
}

model Category {
  id          String    @id
  createdAt   DateTime  @map("created_at")
  updatedAt   DateTime  @map("updated_at")
  description String    @map("description")
  isActive    Boolean   @map("is_active")
  image       String?    @map("image")
  user        User      @relation(fields: [userId], references: [id])
  release     Release[]
  userId      String    @map("user_id")

  @@map("category")
}

model Bank {
  id          String    @id
  createdAt   DateTime  @map("created_at")
  updatedAt   DateTime  @map("updated_at")
  description String    @map("description")
  isActive    Boolean   @map("is_active")
  image       String?    @map("image")
  user        User      @relation(fields: [userId], references: [id])
  userId      String    @map("user_id")

  @@map("bank")
}

model Release {
  id          String   @id
  createdAt   DateTime @map("created_at")
  updatedAt   DateTime @map("updated_at")
  description String   @map("description")
  dueDate     DateTime @map("due_date")
  active      Boolean  @map("active")
  status      Status   @map("status_release")
  type        Type     @map("type_release")
  value       Float    @map("value")
  category    Category @relation(fields: [categoryId], references: [id])
  user        User     @relation(fields: [userId], references: [id])
  userId      String   @map("user_id")
  categoryId  String   @map("category_id")
  bankId      String?   @map("bank_id")

  @@map("custom_release")
}

enum Type {
  RECEP
  EXPENSE
}

enum Status {
  PENDING
  PAID
}
